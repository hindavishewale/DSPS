#include <iostream>
using namespace std;

class student {
public:
    int roll_no;
    string name;
    char clas;

    void insert() {
        cout << "Enter division: ";
        cin >> clas;
        cout << "Enter roll_no: ";
        cin >> roll_no;
        cout << "Enter name: ";
        cin>>name;
    }

    void display() const {
        cout << clas << "\t" << name << "\t" << roll_no << "\t" << "\n";
    }

    static void linear_search(student s[], int n, int key) {
        bool flag = 0; // Declare flag
        for (int i = 0; i < n; ++i) {
            if (key == s[i].roll_no) {
                flag = 1;
                break;
            }
        }
        if (flag==1) {
            cout << "Present!!!\n";
        } else {
            cout << "Not present\n";
        }
    }

    static void binary_search(student s[], int n, int key) {
       
        for (int i = 0; i < n - 1; ++i) {
            for (int j = i + 1; j < n; ++j) {
                if (s[i].roll_no > s[j].roll_no) {
          
                    student temp = s[i];
                    s[i] = s[j];
                    s[j] = temp;
                }
            }
        }
        
        int low = 0, high = n - 1, mid;
        while (low <= high) {
            mid = (low + high) / 2;
            if (s[mid].roll_no == key) {
                cout << "Present!!!\n";
                return;
            } else if (s[mid].roll_no < key) {
                low = mid + 1;
            } else {
                high = mid - 1;
            }
        }
        cout << "Not present\n";
    }
};

int main() {
    student s[10];
    int n, ch, choice;

    do {
        cout << "1. Insert data\n2. Display data\n3. Linear search\n4. Binary search\n";
        cin >> ch;

        switch (ch) {
            case 1:
                cout << "Enter number of students: ";
                cin >> n;
                for (int i = 0; i < n; ++i) {
                  cout<<"enter detail of student"<<i<<"\n";
                    s[i].insert();
                }
                break;

            case 2:
                cout << "Class" << "\t" << "Name" << "\t" << "Roll No" << "\t" << "\n";
                for (int i = 0; i < n; ++i) {
                    s[i].display();
                }
                break;

            case 3:
                {
                    int key;
                    cout << "Enter roll number to search: ";
                    cin >> key;
                    student::linear_search(s, n, key);
                }
                break;

            case 4:
                {
                    int key;
                    cout << "Enter roll number to search: ";
                    cin >> key;
                    student::binary_search(s, n, key);
                }
                break;

            default:
                cout << "Invalid choice.\n";
                break;
        }

    } while (choice == 1);

    return 0;
}
