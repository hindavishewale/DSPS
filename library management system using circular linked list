#include <iostream>
using namespace std;

struct Book {
    string title;
    string author;
    string ISBN;
    bool isAvailable; // True if the book is available
    Book *next;
};

Book *head = nullptr, *temp, *newBook;

// Function to add a book to the library
void addBook(string title, string author, string ISBN, bool isAvailable) {
    newBook = new Book;
    newBook->title = title;
    newBook->author = author;
    newBook->ISBN = ISBN;
    newBook->isAvailable = isAvailable;
    newBook->next = nullptr;

    if (head == nullptr) {
        head = newBook;
    } else {
        temp = head;
        while (temp->next != nullptr) {
            temp = temp->next;
        }
        temp->next = newBook;
    }
}

// Interactive function to add a book
void addBookInteractive() {
    string title, author, ISBN;
    char availability;
    bool isAvailable;

    cout << "Enter book title: ";
    cin >> title;
    cout << "Enter author name: ";
    cin >> author;
    cout << "Enter ISBN: ";
    cin >> ISBN;
    cout << "Is the book available? (y/n): ";
    cin >> availability;
    isAvailable = (availability == 'y' || availability == 'Y');

    addBook(title, author, ISBN, isAvailable);
}

// Function to remove a book from the library
void removeBook() {
    if (head == nullptr) {
        cout << "Library is empty. Nothing to remove.\n";
        return;
    }

    string ISBNToRemove;
    cout << "Enter ISBN of the book to remove: ";
    cin >> ISBNToRemove;

    temp = head;
    Book *prev = nullptr;

    // If the head book is to be removed
    if (head->ISBN == ISBNToRemove) {
        head = head->next;
        delete temp;
        cout << "Book removed successfully.\n";
        return;
    }

    // Traverse the list to find the book
    while (temp != nullptr && temp->ISBN != ISBNToRemove) {
        prev = temp;
        temp = temp->next;
    }

    if (temp == nullptr) {
        cout << "Book with the given ISBN not found.\n";
        return;
    }

    prev->next = temp->next;
    delete temp;
    cout << "Book removed successfully.\n";
}

// Function to search for a book by ISBN
void searchBook() {
    if (head == nullptr) {
        cout << "Library is empty.\n";
        return;
    }

    string ISBNToSearch;
    cout << "Enter ISBN of the book to search: ";
    cin >> ISBNToSearch;

    temp = head;
    while (temp != nullptr) {
        if (temp->ISBN == ISBNToSearch) {
            cout << "Book found:\n";
            cout << "Title: " << temp->title << "\n";
            cout << "Author: " << temp->author << "\n";
            cout << "ISBN: " << temp->ISBN << "\n";
            cout << "Availability: " << (temp->isAvailable ? "Available" : "Checked Out") << "\n";
            return;
        }
        temp = temp->next;
    }

    cout << "Book with the given ISBN not found.\n";
}

// Function to display all books in the library
void displayBooks() {
    if (head == nullptr) {
        cout << "Library is empty.\n";
        return;
    }

    temp = head;
    cout << "Library Collection:\n";
    while (temp != nullptr) {
        cout << "Title: " << temp->title
             << ", Author: " << temp->author
             << ", ISBN: " << temp->ISBN
             << ", Availability: " << (temp->isAvailable ? "Available" : "Checked Out") << "\n";
        temp = temp->next;
    }
}

int main() {
    int choice;

    do {
        cout << "\nLibrary Management System\n";
        cout << "1. Add Book\n2. Remove Book\n3. Search Book\n4. Display Books\n5. Exit\n";
        cout << "Enter your choice: ";
        cin >> choice;

        switch (choice) {
            case 1:
                addBookInteractive();
                break;
            case 2:
                removeBook();
                break;
            case 3:
                searchBook();
                break;
            case 4:
                displayBooks();
                break;
            case 5:
                cout << "Exiting Library Management System.\n";
                break;
            default:
                cout << "Invalid choice. Please try again.\n";
        }
    } while (choice != 5);

    return 0;
}
