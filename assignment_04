#include <iostream>
#include <cstring>

using namespace std;
#define max 50
int stack[max];
int top = -1, front = 0;

void push(char a)
{
    top++;
    stack[top] = a;
}

void pop()
{
    top--;
}

int main()
{
    int i, len_s = 0;
    char s1[max], s[max], b;
    
    cout << "enter string: ";
    cin.getline(s1, max);  // Use getline to read the entire input, including spaces

    // Convert uppercase to lowercase manually using ASCII values
    // and remove non-alphabetic characters
    for (i = 0; s1[i] != '\0'; i++)
    {
        // Convert to lowercase and ignore non-alphabetic characters
        if ((s1[i] >= 65 && s1[i] <= 90))  // Uppercase A-Z
        {
            s[len_s] = s1[i] + 32;  // Convert to lowercase
            len_s++;
        }
        else if (s1[i] >= 97 && s1[i] <= 122)  // Lowercase a-z
        {
            s[len_s] = s1[i];  // No need to convert
            len_s++;
        }
    }
    s[len_s] = '\0';  // Null-terminate the processed string

    // Push only alphabetic characters onto the stack
    for (i = 0; s[i] != '\0'; i++)
    {
        push(s[i]);
    }

    // Compare characters for palindrome check
    for (i = 0; i < (len_s / 2); i++)
    {
        if (stack[top] == stack[front])
        {
            pop();
            front++;
        }
        else
        {
            cout << "not palindrome";
            return 0;
        }
    }

    // If the loop completes, the string is a palindrome
    if (len_s / 2 == front)
    {
        cout << "palindrome";
    }

    front = 0;
    top = -1;

    return 0;
}
