#include <iostream>
#include<ctype.h>
#include<cstring>

using namespace std;
#define max 50
int stack[max];
int top = -1, front = 0;

void push(char a)
{
    top++;
    stack[top] = a;
}

void pop()
{
    top--;
}

int main()
{
    int i, ch, choice;
    char s[max], s1[max], b;
    
    cout << "enter string: ";
    cin >> s1;
    
    int len_s = 0;  // Initialize len_s to 0

    // Calculate the length of the input string
    for (i = 0; s1[i] != '\0'; i++)
    {
        len_s++;
    }

    // Convert uppercase to lowercase manually using ASCII values
    for (int i = 0; i <= len_s; i++)
    {
        if (s1[i] >= 65 && s1[i] <= 90)  // Check if character is uppercase (ASCII A-Z)
        {
            s[i] = s1[i] + 32;  // Convert to lowercase by adding 32 (ASCII a-z)
        }
        else
        {
            s[i] = s1[i];  // Copy other characters as is
        }
    }

    // Push only alphabetic characters onto the stack using ASCII values
    for (i = 0; s[i] != '\0'; i++)
    {
        if (s[i] >= 97 && s[i] <= 122)  // Check if character is lowercase alphabet (ASCII a-z)
        {
            b = s[i];
            push(b);
        }
    }

    // Compare characters for palindrome check
    for (i = 0; i < (len_s / 2); i++)
    {
        if (stack[top] == stack[front])
        {
            pop();
            front++;
        }
        else
        {
            cout << "not palindrome";
            break;
        }
    }

    // If the loop completes, the string is a palindrome
    if (len_s / 2 == front)
    {
        cout << "palindrome";
    }

    front = 0;
    top = -1;

    return 0;
}
